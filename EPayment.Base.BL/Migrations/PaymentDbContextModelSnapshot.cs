// <auto-generated />
using System;
using EPayment.Base.BL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EPayment.Base.BL.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    partial class PaymentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EPayment.Base.BL.Component.Payment.EntityObject.PaymentEO", b =>
                {
                    b.Property<long>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("CardHolder");

                    b.Property<string>("CreditCardNumber");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<int?>("SecurityCode");

                    b.HasKey("PaymentId");

                    b.ToTable("PaymentDbSet");
                });

            modelBuilder.Entity("EPayment.Base.BL.Component.Payment.EntityObject.PaymentStatusEO", b =>
                {
                    b.Property<long>("PaymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PatmentStatus");

                    b.Property<long>("PaymentId");

                    b.HasKey("PaymentStatusId");

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.ToTable("PaymentStatusDbSet");
                });

            modelBuilder.Entity("EPayment.Base.BL.Component.Payment.EntityObject.PaymentStatusEO", b =>
                {
                    b.HasOne("EPayment.Base.BL.Component.Payment.EntityObject.PaymentEO", "PaymentEO")
                        .WithOne("PaymentStatus")
                        .HasForeignKey("EPayment.Base.BL.Component.Payment.EntityObject.PaymentStatusEO", "PaymentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
